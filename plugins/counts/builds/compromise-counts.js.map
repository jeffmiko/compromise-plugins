{"version":3,"file":"compromise-counts.js","sources":["../src/index.js"],"sourcesContent":["const letterReg = /[a-zA-Z]/g\nconst digitReg = /[0-9]/g\nconst paragraphReg = /\\n/;\n\n\nconst addMethod = function(Doc) {\n  \n  Doc.prototype.counts = function(options) {\n    const opts = Object.assign({cache: true}, options)\n    if (opts.cache && this._countsCache) return this._countsCache\n\n    var counts = { paragraphs: 0, sentences: 0, \n                    words: 0, characters: 0, \n                    letters: 0, digits: 0    \n                  }\n\n    var current = null\n    this.list.forEach(sentence => {\n      current = sentence\n      counts.sentences++\n      let terms = sentence.terms()\n      terms.forEach(term => {\n        let text = term.clean || term.text\n        if (text) {\n          counts.words++\n          counts.characters += term.text.length\n          let m = text.match(letterReg)\n          if (m && m.length) counts.letters += m.length\n          m = text.match(digitReg)\n          if (m && m.length) counts.digits += m.length            \n        }\n        if (current && paragraphReg.test(term.post)) {\n          counts.paragraphs++\n          current = null;\n        }          \n      })    \n    })   \n  \n    if (current) counts.paragraphs++\n          \n    if (opts.cache) this._countsCache = counts\n    return counts\n  }\n\n  return Doc\n}\n\nmodule.exports = addMethod"],"names":["letterReg","digitReg","paragraphReg","addMethod","Doc","prototype","counts","options","opts","Object","assign","cache","_countsCache","paragraphs","sentences","words","characters","letters","digits","current","list","forEach","sentence","terms","term","text","clean","length","m","match","test","post"],"mappings":";;;;;;;EAAA,IAAMA,SAAS,GAAG,WAAlB;EACA,IAAMC,QAAQ,GAAG,QAAjB;EACA,IAAMC,YAAY,GAAG,IAArB;;EAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAASC,GAAT,EAAc;EAE9BA,EAAAA,GAAG,CAACC,SAAJ,CAAcC,MAAd,GAAuB,UAASC,OAAT,EAAkB;EACvC,QAAMC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc;EAACC,MAAAA,KAAK,EAAE;EAAR,KAAd,EAA6BJ,OAA7B,CAAb;EACA,QAAIC,IAAI,CAACG,KAAL,IAAc,KAAKC,YAAvB,EAAqC,OAAO,KAAKA,YAAZ;EAErC,QAAIN,MAAM,GAAG;EAAEO,MAAAA,UAAU,EAAE,CAAd;EAAiBC,MAAAA,SAAS,EAAE,CAA5B;EACGC,MAAAA,KAAK,EAAE,CADV;EACaC,MAAAA,UAAU,EAAE,CADzB;EAEGC,MAAAA,OAAO,EAAE,CAFZ;EAEeC,MAAAA,MAAM,EAAE;EAFvB,KAAb;EAKA,QAAIC,OAAO,GAAG,IAAd;EACA,SAAKC,IAAL,CAAUC,OAAV,CAAkB,UAAAC,QAAQ,EAAI;EAC5BH,MAAAA,OAAO,GAAGG,QAAV;EACAhB,MAAAA,MAAM,CAACQ,SAAP;EACA,UAAIS,KAAK,GAAGD,QAAQ,CAACC,KAAT,EAAZ;EACAA,MAAAA,KAAK,CAACF,OAAN,CAAc,UAAAG,IAAI,EAAI;EACpB,YAAIC,IAAI,GAAGD,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACC,IAA9B;;EACA,YAAIA,IAAJ,EAAU;EACRnB,UAAAA,MAAM,CAACS,KAAP;EACAT,UAAAA,MAAM,CAACU,UAAP,IAAqBQ,IAAI,CAACC,IAAL,CAAUE,MAA/B;EACA,cAAIC,CAAC,GAAGH,IAAI,CAACI,KAAL,CAAW7B,SAAX,CAAR;EACA,cAAI4B,CAAC,IAAIA,CAAC,CAACD,MAAX,EAAmBrB,MAAM,CAACW,OAAP,IAAkBW,CAAC,CAACD,MAApB;EACnBC,UAAAA,CAAC,GAAGH,IAAI,CAACI,KAAL,CAAW5B,QAAX,CAAJ;EACA,cAAI2B,CAAC,IAAIA,CAAC,CAACD,MAAX,EAAmBrB,MAAM,CAACY,MAAP,IAAiBU,CAAC,CAACD,MAAnB;EACpB;;EACD,YAAIR,OAAO,IAAIjB,YAAY,CAAC4B,IAAb,CAAkBN,IAAI,CAACO,IAAvB,CAAf,EAA6C;EAC3CzB,UAAAA,MAAM,CAACO,UAAP;EACAM,UAAAA,OAAO,GAAG,IAAV;EACD;EACF,OAdD;EAeD,KAnBD;EAqBA,QAAIA,OAAJ,EAAab,MAAM,CAACO,UAAP;EAEb,QAAIL,IAAI,CAACG,KAAT,EAAgB,KAAKC,YAAL,GAAoBN,MAApB;EAChB,WAAOA,MAAP;EACD,GAnCD;;EAqCA,SAAOF,GAAP;EACD,CAxCD;;SA0Cc,GAAGD;;;;;;;;"}